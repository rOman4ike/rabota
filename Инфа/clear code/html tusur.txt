# Ссылки
1. https://web.dev/learn/html/headings-and-sections?hl=ru

# Семантика
  <header> - это либо начало страницы (то, что повторяется от страницы к странице), либо начало блока/секции (может быть не один на одной странице)

  <nav> - определяет отдельную секцию документа, назначение которой обозначение ссылок навигации (как внутри текущего документа, так и ведущих на другую страницу).
    В качестве примера такой секции можно привести меню, якорные ссылки.
    Документ может содержать несколько <nav> элементов. Например, один для навигации по сайту, второй для навигации по странице.
    Важно: Запрещается вкладывать <nav> внутрь <address>.

  <aside> - Определяет блок сбоку от контента для размещения рубрик, ссылок на архив, меток и другой информации. Такой блок, как правило, называется «сайдбар» или «боковая панель».
    Это <aside> в качестве боковой панели к основному контенту.


  ?? Хз буду ли использовать
  <dl> - Этот элемент обычно используют при создании глоссария или для отображения метаданных (списка пар ключ-значение).
    HTML разрешает оборачивать каждую группу имя-значение в элементе <dl> в элемент <div>.
    Пример:
      <dl>
        <div>
          <dt>Name</dt>
          <dd>Godzilla</dd>
        </div>
        <div>
          <dt>Born</dt>
          <dd>1952</dd>
        </div>
      </dl>

  <time> -


  <section> — более крупный логический контейнер, объединяющий содержание по смыслу. Например, блок «О компании», список товаров, раздел личной информации в профиле и так далее.
  <article> — самостоятельный, цельный и независимый раздел документа. Этот раздел можно в неизменном виде использовать в различных местах,
    в том числе и на других сайтах. Примеры: статья, пост в блоге, сообщение на форуме и так далее.

  <div>/<span> - нет конкретного предназначения

  # Примеры:
    header:
      <header class="conf-index__header">
        <h1 class="conf-index__title">
          Confs
        </h1>

        <div class="conf-index__actions">
          <button>
            CreateConf
          </button>
        </div>
      </header>
    dl, dt, dd:
      <dl class="attrs">
        <dt>Ширина:</dt>
        <dd>826 мм</dd>
        <dt>Высота:</dt>
        <dd>523 мм</dd>
        <dt>Гарантия:</dt>
        <dd>12 мес.</dd>
        <dt>Дополнительно:</dt>
        <dd>оперативная память 1 Гб, USB 2.0х2, внутренняя память 4 Гб, документация, пульт ДУ, настольная подставка</dd>
      </dl>

      <dl>
        <dt>Режиссёр
        <dd>Семён Туманов
        <dt>В главных ролях
        <dd>Юрий Никулин
        <dd>Алла Ларионова
        <dd>Юрий Белов
        <dd>Лев Дуров
        <dd>Владимир Емельянов
      </dl>

































Ссылки
  # Переменные
    # https://webdesign.tutsplus.com/quick-tip-name-your-sass-variables-modularly--webdesign-13364a
    # https://www.fixate.it/blog/make-your-css-variable-names-suck-less
    # https://davidwalsh.name/sass-color-variables-dont-suck
    # https://alexjpate.com/posts/naming-sass-color-variables
    # https://sandstorm.de/de/blog/post/bem-sass-scss-variable-naming.html - ???

  # Архитектура
    # https://webworkshop.net/organizing-css-files-the-7-1-template/

# SASS
  Синтаксис и форматирование:
    # Порядок расположения свойств

  Соглашения по именованию:

  Архитектура (Template 7-1):
    1. Abstracts
      в эту папку ложатся всякие вспомогательные вещи — функции, переменные, миксины.

    2. Base
      В эту папку нужно поместить весь "шаблонный" код. Под "шаблонным" кодом мы подразумеваем весь CSS-код, который вам
      придется писать при создании нового проекта.
      Например: типографские правила, анимация, утилиты (то есть классы вроде margin-right-large, text-center) и так далее.

    3. Components
      Речь идет о стилях компонентов, используемых для построения страниц. Это кнопки, формы, всевозможные слайдеры, всплывающие окна и так далее.
      (Штуки, которые часто используются на страницах)

    4. Pages
      Иногда проекту нужны страницы, имеющие свой особый стиль, отличающийся от стиля других страниц.
      Описания стилей для таких специальных страниц находятся в этой папке.

    5. Vendors
      В этой папке собраны стили, созданные не теми, кто занимается разработкой конкретного сайта. (normalize.css, bootstrap.sass)

    -1. main.sass (application.sass)
      Точка входа (В него складываются все импорты)

    -2. _shame.sass (Надо-бы назвать по другому)

  Адаптивный веб-дизайн и точки останова:

  Переменные:

    # Почему primary, secondary, tertiary
      Мы знаем, что в цветовом спектре есть первичные, вторичные и третичные цвета.
      Слова первичный, вторичный и третичный также представляют собой порядковую шкалу.
      +
      Суффикс, описывающий их светлоту или темноту по отношению к этому основному цвету:


    # Нейминг
      Название переменной должно состоять из нескольких частей:
        1. Что оно меняет
        2. К чему относится (Опционально)
        3. Его название
        ?. ...
        4. Его модификатор (dark, light, min, max, large, small, и т.д)

      У имени должно быть

      Примеры:
        // Color
        $color-primary: blue
        $color-primary-dark: darkblue
        $color-primary-light: lightblue

        $color-secondary: red

        $color-danger: red

        $color-bg-primary: gray
        $color-bg-secondary: darkgray

        $color-border-danger: red

        $color-text-primary: black
        $color-link-dark: blue

        $color-title: darkgray

        # Size
        $size-h1-lg: 48px;
        $size-h1-sm: 36px;

        $size-text-lg: 16px
        $size-link-lg: 16px

        # Line-height
        $line-height-text: 1.5




















  # Слова, часто используемые в CSS-классах:
  title - заголовок
  actions - блок с действиями
  list - список (ul)
  btn - кнопки
  inner — внутренняя обёртка
  sidebar — боковая колонка (страницы или элемента)


  header — шапка (страницы или элемента)
  footer — подвал (страницы или элемента)






















































# БЭМ
  Блок - независимый компонент страницы, который может быть повторно использован.
  Название блока характеризует смысл "Что это?"
    <!-- Верно. Семантически осмысленный блок `error` -->
    <div class="error"></div>

    <!-- Неверно. Описывается внешний вид -->
    <div class="red-text"></div>

  Блокам нельзя писать внешние размеры (margin, position)
  Внутри одних блоков могут быть сколько угодно блоков (Допустима любая вложенность блоков.):
    <header class="header">
      <div class="logo">
        <a class="link"></a>
      </div>
    </header>

  Используйте блок если он будет переиспользоваться

  Элемент - составная часть блока (Без блока элемент невозможен!).
  Название элемента:
    'имя-блока__имя-элемента'

  Название элемента характеризует смысл "Что это?":
    <header class="header">
      <div class="header__logo"></div> <!-- header__logo - элемент блока header -->
      <div class="header__menu-list"></div> <!-- header__menu__list - элемент блока header -->
    </header>

  Вложенность - элемент элемента не бывает:
    Верно:
      <div class="about">
        <div class="about__inner">
          <div class="about__items"></div> <!-- Допустима любая вложенность элементов -->
        </div>
      </div>
    Неверно:
      <div class="about">
        <div class="about__inner">
          <div class="about__inner__items"></div> <!-- Элемент элемента не бывает-->
        </div>
      </div>

  Элемент — необязательный компонент блока. Не у всех блоков должны быть элементы.
    <!-- Блок `search-form` -->
    <div class="search-form">
      <!-- Блок `input` -->
      <input class="input">
    </div>

  Модификатор - Cущность, определяющая внешний вид, состояние или поведение блока либо элемента.
  Название элемента:
    'имя-блока--имя-модификатора' ИЛИ 'имя-блока__имя-элемента--имя-модификатора'

    Название модификатора характеризует:
      1. Внешний вид («какой размер?», «какая тема?» btn--success, text--danger);
      2. Состояние («чем отличается от прочих?» disabled, focused);
      3. Поведение («как ведет себя?», «как взаимодействует с пользователем?» — «направление»: directions--left-top).

  Микс
    В одном тэге можно быть и блок, и элемент
      <div class="search-form header__search-form"></div>
    В блоке нельзя использовать внешние отступы, значит они будут в стилях 'header__search-form'